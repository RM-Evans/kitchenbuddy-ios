# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

# default_platform(:ios)

# platform :ios do
#   desc "Push a new beta build to TestFlight"
#   lane :beta do
    # increment_build_number(xcodeproj: "KitchenBuddy.xcodeproj")
    # build_app(workspace: "KitchenBuddy.xcworkspace", scheme: "KitchenBuddy")
    # upload_to_testflight
#   end
# end


default_platform :ios

platform :ios do

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    sh("cd ..; npm install; cd -;")
    # cocoapods( 
    #   repo_update: true,
    #   use_bundle_exec: false
    # )
      
      
    api_key = app_store_connect_api_key(
        key_id: "H6Q2FDQYXH",
        issuer_id: "0dd77eb6-3776-46a6-84bd-efbf59a2e9a6",
        key_filepath: "/tmp/connect_key",
        duration: 1200, # optional (maximum 1200)
        in_house: false # optional but may be required if using match/sigh
    )

      
    # match(type: "appstore", readonly: true) # more information: https://codesigning.guide
    match(
      type: "adhoc", 
      app_identifier: "io.hexly.SoundFave",
      api_key: api_key
    ) # more information: https://codesigning.guide
    # build_app(workspace: "KitchenBuddy.xcworkspace", scheme: "KitchenBuddy")
    # build_app(
    #   scheme: "XomlySell",
    #   clean: true,
    #   export_method: "app-store"  
    # )
    

    gym(scheme: "KitchenBuddy", export_method: "ad-hoc")

    aws_s3(
        access_key: ENV['S3_ACCESS_KEY'],
        secret_access_key: ENV['S3_SECRET_ACCESS_KEY'],
        bucket: "apps.mobile.hexly.cloud",
        region: "us-west-2",
        ipa: "KitchenBuddy.ipa",
        acl: "public-read",
        upload_metadata: true,
        app_directory: "beta"
    )

          # upload_to_testflight(
          #   api_key: api_key,
          #   skip_waiting_for_build_processing: true,
          #   changelog: "Testing"
          #   # changelog: "#{ENV['BITRISE_GIT_BRANCH']} - #{ENV['BITRISE_GIT_MESSAGE']}"
          # )
    sh("cd ../; npm run ios:generate-sourcemaps; npm run ios:upload-sourcemaps-to-bugsnag; cd -;") # JS sourcemaps
    clean_build_artifacts # Delete the local dSYM files
  end
  lane :update_push_certs do
    get_push_certificate(
      new_profile: proc do |profile_path| # this block gets called when a new profile was generated
        puts profile_path # the absolute path to the new PEM file
        # insert the code to upload the PEM file to the server
      end
    )
  end
end
